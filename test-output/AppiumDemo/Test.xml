<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Asim_PC" failures="0" tests="6" name="Test" time="48.65" errors="0" timestamp="2025-01-21T23:41:19 IST">
  <testcase classname="automationScenarios.IntractWithExistingApp" name="@BeforeTest setUp" time="0.039">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. 
Host info: host: &amp;apos;ASIM_PC&amp;apos;, ip: &amp;apos;10.179.188.115&amp;apos;
Build info: version: &amp;apos;4.23.0&amp;apos;, revision: &amp;apos;4df0a231af&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.11&amp;apos;
Driver info: io.appium.java_client.flutter.android.FlutterAndroidDriver
Command: [null, newSession {capabilities=[Capabilities {appium:appActivity: com.android.deskclock.DeskC..., appium:appPackage: com.google.android.documentsui, appium:automationName: Uiautomator2, platformName: ANDROID}]}]
Capabilities {appium:appActivity: com.android.deskclock.DeskC..., appium:appPackage: com.google.android.documentsui, appium:automationName: Uiautomator2, platformName: ANDROID}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. 
Host info: host: 'ASIM_PC', ip: '10.179.188.115'
Build info: version: '4.23.0', revision: '4df0a231af'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: io.appium.java_client.flutter.android.FlutterAndroidDriver
Command: [null, newSession {capabilities=[Capabilities {appium:appActivity: com.android.deskclock.DeskC..., appium:appPackage: com.google.android.documentsui, appium:automationName: Uiautomator2, platformName: ANDROID}]}]
Capabilities {appium:appActivity: com.android.deskclock.DeskC..., appium:appPackage: com.google.android.documentsui, appium:automationName: Uiautomator2, platformName: ANDROID}
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:270)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:91)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:103)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:109)
at io.appium.java_client.flutter.android.FlutterAndroidDriver.<init>(FlutterAndroidDriver.java:25)
at automationScenarios.IntractWithExistingApp.setUp(IntractWithExistingApp.java:38)
Caused by: java.io.UncheckedIOException: java.net.ConnectException
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:439)
at io.appium.java_client.internal.filters.AppiumIdempotencyFilter.lambda$apply$0(AppiumIdempotencyFilter.java:35)
at io.appium.java_client.internal.filters.AppiumUserAgentFilter.lambda$apply$0(AppiumUserAgentFilter.java:87)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:355)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:89)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:176)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:237)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:527)
... 31 more
Caused by: java.net.ConnectException
at java.net.http/jdk.internal.net.http.common.Utils.toConnectException(Utils.java:1055)
at java.net.http/jdk.internal.net.http.PlainHttpConnection.connectAsync(PlainHttpConnection.java:198)
at java.net.http/jdk.internal.net.http.PlainHttpConnection.checkRetryConnect(PlainHttpConnection.java:230)
at java.net.http/jdk.internal.net.http.PlainHttpConnection.lambda$connectAsync$1(PlainHttpConnection.java:206)
at java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934)
at java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911)
at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1773)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException
at java.base/sun.nio.ch.SocketChannelImpl.ensureOpen(SocketChannelImpl.java:195)
at java.base/sun.nio.ch.SocketChannelImpl.beginConnect(SocketChannelImpl.java:760)
at java.base/sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:848)
at java.net.http/jdk.internal.net.http.PlainHttpConnection.lambda$connectAsync$0(PlainHttpConnection.java:183)
at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
at java.net.http/jdk.internal.net.http.PlainHttpConnection.connectAsync(PlainHttpConnection.java:185)
... 9 more
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest setUp -->
  <testcase classname="automationScenarios.interactWithKeyBoard" name="@BeforeClass setUp" time="-1.737483078885E9">
    <skipped/>
  </testcase> <!-- @BeforeClass setUp -->
  <testcase classname="automationScenarios.interactWithKeyBoard" name="@AfterClass tearDown" time="-1.737483078912E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="automationScenarios.DifferentGestures" name="@BeforeClass beforeClass" time="-1.737483078925E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="automationScenarios.DifferentGestures" name="@AfterClass afterClass" time="-1.737483078934E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="GoogleClock.Automation.ClockAppAutomationFunc" name="@BeforeClass launchApp" time="-1.737483078942E9">
    <skipped/>
  </testcase> <!-- @BeforeClass launchApp -->
  <testcase classname="GoogleClock.Automation.ClockAppAutomationFunc" name="@AfterClass tearDown" time="-1.73748307895E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="automationScenarios.interactWithApps" name="@BeforeClass setUp" time="-1.737483078952E9">
    <skipped/>
  </testcase> <!-- @BeforeClass setUp -->
  <testcase classname="automationScenarios.interactWithApps" name="@AfterClass tearDown" time="-1.737483078961E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="automationScenarios.InstallExternalApkAndLaunch" name="@AfterTest tearDown" time="-1.737483078962E9">
    <skipped/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="automationScenarios.IntractWithExistingApp" name="@AfterTest tearDown" time="-1.737483078965E9">
    <skipped/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="automationScenarios.interactWithKeyBoard" name="keyboardInteractions" time="0.0">
    <skipped/>
  </testcase> <!-- keyboardInteractions -->
  <testcase classname="automationScenarios.IntractWithExistingApp" name="setAlarm" time="0.0">
    <skipped/>
  </testcase> <!-- setAlarm -->
  <testcase classname="automationScenarios.DifferentGestures" name="performGestures" time="0.0">
    <skipped/>
  </testcase> <!-- performGestures -->
  <testcase classname="automationScenarios.InstallExternalApkAndLaunch" name="clickApp" time="0.0">
    <skipped/>
  </testcase> <!-- clickApp -->
  <testcase classname="GoogleClock.Automation.ClockAppAutomationFunc" name="setAlarm" time="0.0">
    <skipped/>
  </testcase> <!-- setAlarm -->
  <testcase classname="automationScenarios.interactWithApps" name="appInteractions" time="0.0">
    <skipped/>
  </testcase> <!-- appInteractions -->
</testsuite> <!-- Test -->
